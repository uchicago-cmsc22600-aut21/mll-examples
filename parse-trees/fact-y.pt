(Prog (BindFun intToString ((PatVar i))
               (ExpIf (ExpBin (ExpVar i) < (ExpInt 0))
                      (ExpBin (ExpStr "-") ^ (ExpApp (ExpVar intToString) (ExpUn unary - (ExpVar i))))
                      (ExpIf (ExpBin (ExpVar i) == (ExpInt 0)) (ExpStr "0")
                             (ExpIf (ExpBin (ExpVar i) == (ExpInt 1)) (ExpStr "1")
                                    (ExpIf (ExpBin (ExpVar i) == (ExpInt 2)) (ExpStr "2")
                                           (ExpIf (ExpBin (ExpVar i) == (ExpInt 3)) (ExpStr "3")
                                                  (ExpIf (ExpBin (ExpVar i) == (ExpInt 4)) (ExpStr "4")
                                                         (ExpIf (ExpBin (ExpVar i) == (ExpInt 5)) (ExpStr "5")
                                                                (ExpIf (ExpBin (ExpVar i) == (ExpInt 6)) (ExpStr "6")
                                                                       (ExpIf (ExpBin (ExpVar i) == (ExpInt 7))
                                                                              (ExpStr "7")
                                                                              (ExpIf (ExpBin (ExpVar i) == (ExpInt 8))
                                                                                     (ExpStr "8")
                                                                                     (ExpIf (ExpBin (ExpVar i) ==
                                                                                                    (ExpInt 9))
                                                                                            (ExpStr "9")
                                                                                            (ExpBin (ExpApp (ExpVar intToString)
                                                                                                            (ExpBin (ExpVar i)
                                                                                                                    /
                                                                                                                    (ExpInt 10)))
                                                                                                    ^
                                                                                                    (ExpApp (ExpVar intToString)
                                                                                                            (ExpBin (ExpVar i)
                                                                                                                    %
                                                                                                                    (ExpInt 10))))))))))))))))
      (BindFun y ((PatVar f) (PatVar x))
               (SCOPE ((BindFun g ((PatVar x)) (ExpApp (ExpApp (ExpVar y) (ExpVar f)) (ExpVar x))))
                      (ExpApp (ExpApp (ExpVar f) (ExpVar g)) (ExpVar x))))
      (BindFun factY ((PatVar fact) (PatVar n))
               (ExpIf (ExpBin (ExpVar n) == (ExpInt 0)) (ExpInt 1)
                      (ExpBin (ExpVar n) * (ExpApp (ExpVar fact) (ExpBin (ExpVar n) - (ExpInt 1))))))
      (BindVal (PatVar fact) (ExpApp (ExpVar y) (ExpVar factY))) (BindVal (PatVar n) (ExpInt 5))
      (BindVal (PatVar fact_n) (ExpApp (ExpVar fact) (ExpVar n))) (BindExp (ExpApp (ExpVar print) (ExpStr "fact ")))
      (BindExp (ExpApp (ExpVar print) (ExpApp (ExpVar intToString) (ExpVar n))))
      (BindExp (ExpApp (ExpVar print) (ExpStr " = ")))
      (BindExp (ExpApp (ExpVar print) (ExpApp (ExpVar intToString) (ExpVar fact_n))))
      (BindExp (ExpApp (ExpVar print) (ExpStr "\n"))) (ExpTuple))
